<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <properties url="file:///D:\workspace\java\ssmDemo\src\main\resources\config.properties"/>
    <!--指定特定数据库的jdbc驱动jar包的位置(绝对路径)-->
    <classPathEntry location="${base_jar}"/>
    <!-- MyBatis3Simple：不生成 Example相关类及方法 -->
    <context id="generator" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!--插件-start-->
        <!--指定mapper生成的模板-->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="${mappers}"/>
        </plugin>
        <!--生成JavaBean 对象重写toString方法-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!--生成JavaBean 对象实现序列化接口-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!--生成JavaBean 对象重写equals 方法和 hashCode 方法-->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <!--插件-end-->

        <commentGenerator>
        <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
        <property name="suppressAllComments" value="true" />
    </commentGenerator>

    <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
    <jdbcConnection driverClass="${jdbc_driver}"
                    connectionURL="${jdbc_url}" userId="${jdbc_user}" password="${jdbc_password}">
    </jdbcConnection>

    <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
    NUMERIC 类型解析为java.math.BigDecimal -->
    <javaTypeResolver>
        <property name="forceBigDecimals" value="false" />
    </javaTypeResolver>

    <!-- targetProject:生成PO类的位置 -->
    <javaModelGenerator targetPackage="${pojo_package}"
                        targetProject="${targetProject}">
        <!-- 是否对model添加 构造函数 -->
        <property name="constructorBased" value="true"/>
        <!-- enableSubPackages:是否让schema作为包的后缀 -->
        <property name="enableSubPackages" value="false" />
        <!-- 从数据库返回的值被清理前后的空格 -->
        <property name="trimStrings" value="true" />
    </javaModelGenerator>
    <!-- targetProject:mapper映射文件生成的位置 -->
    <sqlMapGenerator targetPackage="${mapper_package}"
                     targetProject="${targetProject}">
        <!-- enableSubPackages:是否让schema作为包的后缀 -->
        <property name="enableSubPackages" value="false" />
    </sqlMapGenerator>
    <!-- targetPackage：mapper接口生成的位置 -->
    <javaClientGenerator type="XMLMAPPER" targetPackage="${mapper_package}"
                         targetProject="${targetProject}">
        <!-- enableSubPackages:是否让schema作为包的后缀 -->
        <property name="enableSubPackages" value="false" />
    </javaClientGenerator>
    <!-- 指定数据库表 *生成所有表-->
    <table tableName="items"></table>
    <table tableName="user"></table>
    <table tableName="orders"></table>
</context>
</generatorConfiguration>